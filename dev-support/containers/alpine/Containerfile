# syntax=docker/dockerfile:1.4

# This is the build stage for clipcat. Here we create the binary in a temporary image.
FROM rust AS builder

RUN <<EOF
#!/usr/bin/env ash

set -eu

apk add --no-cache \
    musl-dev \
    protobuf-dev

EOF

WORKDIR /build
COPY . /build

RUN cargo build --locked --release

# This is the 2nd stage: a very small image where we copy the binaries."
FROM alpine as clipcat

COPY --from=builder /build/target/release/clipcatd       /usr/bin
COPY --from=builder /build/target/release/clipcatctl     /usr/bin
COPY --from=builder /build/target/release/clipcat-menu   /usr/bin
COPY --from=builder /build/target/release/clipcat-notify /usr/bin

RUN <<EOF
#!/usr/bin/env ash

set -eu

# check if executable works in this container
/usr/bin/clipcatd       version
/usr/bin/clipcatctl     version --client
/usr/bin/clipcat-menu   version --client
/usr/bin/clipcat-notify version

EOF

ENTRYPOINT [ "/usr/bin/clipcatd", "version" ]
